resources:
  - name: repogcp_bindu
    type: GitRepo
    configuration:
      gitProvider: bindu_github
      path: bindushree16/automation_for_gcp 
      
pipelines:
  - name: automation_gcp_pipeline
    steps:
      - name: gcp_machine
        type: Bash
        configuration: 
          priority: 0
          timeoutSeconds: 50000
          environmentVariables:
            env1: value1
            env2: value2
          integrations:
            - name: aws_keys  
          inputResources:
            - name: repogcp_bindu
          runtime:       
            type: image     #<image/host>
            image:
              custom:
                name: drydock/u16
                tag: master
        execution:
          onExecute:
            - pwd
            - terraform --version
            - printenv
            - pushd $res_repogcp_bindu_resourcePath
            - terraform init            
            - ls -la
            - PWD=$(pwd)
            - echo PWD=$PWD
            - terraform apply
            - terraform output ip
            - bindu_ip_address=$(terraform output ip)
            - echo "$bindu_ip_address"
            - add_pipeline_variables bindu_ip_address=$bindu_ip_address
            - add_pipeline_files $PWD/terraform.tfstate jfrog_pipeline
            - popd

      - name: gcp_installation
        type: Bash
        configuration:
          timeoutSeconds: 50000
          environmentVariables:
            env1: value1
            env2: value2
          integrations:
            - name: gcp_key 
            - name: ART_keys
            - name: art  
          inputSteps:
            - name: gcp_machine
          inputResources:
            - name: repogcp_bindu   
          runtime:       
            type: image     #<image/host>
            image:
              custom:
                name: drydock/u16
                tag: master
        execution:
          onExecute:
            - printenv
            - pushd $res_repogcp_bindu_resourcePath
            - PWD=$(pwd)
            - echo $PWD
            - replace_envs $PWD/pipeline_installer.sh
            - cat $PWD/pipeline_installer.sh
            - echo $bindu_ip_address
            - chmod 777 "$PWD"/pipeline_installer.sh
            - chmod 777 "$PWD"/test.sh
            - which ssh
            - echo $PWD
            - ssh -i ~/.ssh/id_rsa bindu@bindu_ip_address:~
#             - scp -i ~/.ssh/bindu.pem $PWD/pipeline_installer.sh test.sh centos@$bindu_ip_address:~
#             - ssh -i ~/.ssh/bindu.pem centos@$bindu_ip_address ls
#             - ssh -i ~/.ssh/bindu.pem centos@$bindu_ip_address "sudo ./pipeline_installer.sh"
#             - ssh -i ~/.ssh/bindu.pem centos@$bindu_ip_address "sudo ./test.sh"
            
      - name: Destroy_gcp_machine
        type: Bash
        configuration: 
          priority: 0
          timeoutSeconds: 50000
          environmentVariables:
            env1: value1
            env2: value2
          integrations:
            - name: aws_keys
          inputSteps:
            - name: gcp_installation
          inputResources:
            - name: repogcp_bindu
          runtime:       
            type: image     #<image/host>
            image:
              custom:
                name: drydock/u16
                tag: master
        execution:
          onExecute:  
            - pushd $res_repogcp_bindu_resourcePath
            - echo $PWD
            - echo "$bindu_ip_address"
            - terraform init
            - replace_envs $PWD/keys.tfvar
            - restore_pipeline_files jfrog_rhel_pipeline $PWD/terraform.tfstate
            - terraform destroy -auto-approve -var-file="$PWD/keys.tfvar"
            - popd
            
            

